Starting code feedback for Xuan, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 18.40 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, MiniProject, Week7, Week1, Week3, Feedback, Week2, xw1722

Found the following files in parent directory: .DS_Store, README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
.DS_Store
**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# CMEE Coursework Repository

## Description:

This is the repository of the coursework for MSc in Computational Methods in Ecology and Evolution, Imperial College London Silwood Campus, for the academic year 2022/23.

The CourseWork in this repository is mainly composed of the contents in *The Multilingual Quantitative Biologist* from the link: https://mhasoba.github.io/TheMulQuaBio/intro.html

The major source of the dataset are from:
git@github.com:mhasoba/TheMulQuaBio.git

## Structure:

The contents in each directory are listed as follows.

### Week1:

Week1 is an introduction to the Unix & Linux system.

- Shell scripting

- LaTeX learning

### Week2:

This directory contains mainly the instructions to Python programming, which includes:

- Loops and list comprehensions

- Writing a program with control flows

- Unit testing with docstring

- Some commonly used Python packages

### Week3:

Week3 mainly focus on the R scripting.

- R basics

- R control flows

- Vectorization

- Debugging

### Week7:

Week7 contains some advanced skills in Python, and also an introduction to Jupyter Notebook.

- Numerical computing

- Profiling

- Using Python to build workflows

### xw1722:

This is the HPC directory containing the High Performance Computing Programming Exercises. The files inside includes:

- xw1722_HPC_2022_neutral_cluster.R: The R script used for clustering for the neutral model;

- xw1722_HPC_2022_demographic_cluster.R: The R script used for clustering for the stochastic model;

- xw1722_HPC_2022_main.R: The R script containing the answers to all the questions from 1 to 37, and also the challenge questions;

- .png files: The graphs generated from the answers;

- .e and .o files: Generated by the cluster for the simulation runs;

- .rda files: Output files generated from the simulation runs, and a summary file.

### MiniProject:

The files in the directory of MiniProject provides the answers to the question: *What mathematical models best fit an empirical dataset?*

## Dependencies:

**Languages:**

R version 4.2.2

Python 3.9.12

IPython 7.31.1

LaTeX

Shell

**Packages:**

*Python* - numpy, scipy, matplotlib, ipdb, pandas

*R* - minpack.lm, tidyverse, reshape2, maps

## Author name and contact:

Author: Xuan Wang

Email: xuan.wang22@imperial.ac.uk

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 4 weekly directories: Week1, Week2, Week3, Week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, results, data

Found the following files: README_week1.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README_week1.md

Printing contents of README_week1.md:

**********************************************************************
# CMEE coursework Week1

## Description:

This is the repository for the CMEE coursework of week1 and is completed on 16th October. 

## Languages:

Bash

## Structure:

- fasta exercise (UnixPrac1.txt)

- Shell scripting exercise (ConcatenateTwoFiles.sh ; tabtocsv.sh ; csvtospace.sh)

- LaTeX exercise (CompileLaTeX.sh)

## Author name and Contact:

Xuan Wang

xuan.wang22@imperial.ac.uk

**********************************************************************

Results directory is empty - good! 

Found 11 code files: tiff2png.sh, CountLines.sh, tabtocsv.sh, variables.sh, FirstExample.tex, boilerplate.sh, csvtospace.sh, ConcatenateTwoFiles.sh, UnixPrac1.txt, CompileLaTeX.sh, MyExampleScript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
for f in *.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).png"; 
    done

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

convert-im6.q16: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2924.
convert-im6.q16: no images defined `*.png' @ error/convert.c/ConvertImageCommand/3229.

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash

NumLines='wc -l < $1'
echo "The file $1 has $NumLines lines"
echo
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The file  has wc -l < $1 lines


**********************************************************************

Code ran without errors

Time consumed = 0.00289s

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Xuan Wang xuan.wang22@imperial.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

if [ -n "$1" ];then # check if the input is not empty
    cat $1 | tr -s "\t" "," >> $1.csv # Creating a comma delimited version of $1 ...
    echo "Done!"
else
    echo "Please enter an input"
fi
exit
**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter an input

**********************************************************************

Code ran without errors

Time consumed = 0.00361s

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/sh

## Illustrates the use of variables 

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:
MY_VAR='some string' 
echo 'the current value of the variable is:' $MY_VAR
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (multiple values) from user input:
echo 'Enter two numbers separated by space(s)'
read a b
echo
echo 'you entered' $a 'and' $b '; Their sum is:'

## Assigned Variables; Command substitution
MY_SUM=$(expr $a + $b)
echo $MY_SUM
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Please enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Your Name}

\date{}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper analyzes a seminal equation in population biology.
  \end{abstract}
  
  \section{Introduction}
    Blah Blah
  
  \section{Materials \& Methods}
  
  A foundational equation of population biology is:
  
  \begin{equation}
    \frac{dN}{dt} = r N (1 - \frac{N}{K})
  \end{equation}
  
  It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.
  
  \bibliographystyle{plain}
  
  \bibliography{FirstBiblio}

\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/sh
#Author: Xuan Wang xuan.wang22@imperial.ac.uk
#Script: boilerplate.sh
#Desc: simple boilerplate for shell scripts
#Arguments: none
#Date: Oct 5
echo -e "\nThis is a shell script \n"
#exit




**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script 


**********************************************************************

Code ran without errors

Time consumed = 0.00482s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Xuan Wang xuan.wang22@imperial.ac.uk
# Script: csvtospace.sh
# Desc: This script takes a comma separated values and converts it to a space separated values file
# Date: Oct 2019

if [ -z "$1" ]; then # checks if the input is empty
    echo "Please enter a valid input."
else
    if [ -e "$1" ]; then # checks if the file exists
        if [ -d "$1"]; then # checks if the input is a directory
            for i in $1/*.csv
            do
            echo "Converting the comma separated values to space separated ..."
            newoutput = "${i%.csv}.txt" # creating a new output to prevent pollution to the original file data
            cat $i | tr -s ',' '\b' > newoutput.csv # replacing the comma with spaces instead
            echo "Done!"
            done
        else
            if [ -f "$1" ]; then # checks if the object is a file
                for i in $1
                do
                    echo "Converting the comma separated values to space separated ..."
                    newoutput = "${i%.csv}.txt"
                    cat $i | tr -s ',' '\b' > newoutput.csv
                    echo "Done!"
                done
            else
                echo "Please enter a valid directory or file"
            fi
        fi
    else      
        echo "The input does not exist."        
    fi
fi
exit

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter a valid input.

**********************************************************************

Code ran without errors

Time consumed = 0.00427s

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash

if [ !-z "$1" ] && [ !-z "$2"] && [ !-z "$3"]; then #checks if the inputs are not empty
    cat $1 > $3
    cat $2 >> $3
    echo "Merged File is"
    cat $3
else
    echo "Please enter valid input"
fi
exit

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter valid input

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

ConcatenateTwoFiles.sh: line 3: [: !-z: unary operator expected

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#1 - count the lines in each file
wc -l ../data/407228326.fasta 
wc -l ../data/407228412.fasta
wc -l ../data/E.coli.fasta

#2 - printing starting from the second line for E.coli
tail -n+2 ../data/E.coli.fasta

#3 - count the sequence length of the genome
tail -n+2 ../data/E.coli.fasta | tr -d "\n" | wc -c

#4 - count the matches of "ATGC" in the genome of E. coli
tail -n+2 ../data/E.coli.fasta | tr -d "\n" | grep -o ATGC ../data/E.coli.fasta | wc -l

#5 - compute the AT/GC ratio
echo $(tail -n +2 ../data/E.coli.fasta | tr -d "\n" | grep -o [A,T] ../data/E.coli.fasta | wc -l)/$(tail -n +2 ../data/E.coli.fasta | tr -d "\n" | grep -o [G,C] ../data/E.coli.fasta | wc -l) | bc -l

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash
pdflatex $1
bibtex $1.tex
pdflatex $1
pdflatex $1
evince $1.tex.pdf &

## Cleanup
rm *.aux
rm *.log
rm *.bbl
rm *.blg
rm *.fls
rm *.bib
rm *.fdb_latexmk

# move to the results directory
mv *.pdf ../results/


**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
**
! End of file on the terminal... why?
I couldn't open file name `.tex.aux'
This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
**
! End of file on the terminal... why?
This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex)
 restricted \
**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory
rm: cannot remove '*.fls': No such file or directory
rm: cannot remove '*.bib': No such file or directory
rm: cannot remove '*.fdb_latexmk': No such file or directory
mv: cannot stat '*.pdf': No such file or directory

(evince:224132): Handy-WARNING **: 15:19:46.376: Using GtkSettings:gtk-application-prefer-dark-theme together with HdyStyleManager is unsupported. Please use HdyStyleManager:color-scheme instead.

** (evince:224132): WARNING **: 15:19:46.604: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2022-23/Coursework/StudentRepos/XuanWang_/Week1/code/.tex.pdf”: No such file or directory

** (evince:224132): WARNING **: 15:19:46.605: set_filenames: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2022-23/Coursework/StudentRepos/XuanWang_/Week1/code/.tex.pdf”: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.631: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.637: Error setting file metadata: No such file or directory

** (evince:224132): WARNING **: 15:19:46.637: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/sh

MSG1="Hello"
MSG2=$USER
echo "$MSG1 $MSG2"
echo "Hello $USER"
echo
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00470s

======================================================================
======================================================================
Finished running scripts

Ran into 4 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!